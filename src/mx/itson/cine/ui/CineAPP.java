/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mx.itson.cine.ui;
import java.sql.Time;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import java.util.List;
import javax.swing.table.DefaultTableModel;
import mx.itson.cine.entities.Funcion;
import mx.itson.cine.entities.Pelicula;
import mx.itson.cine.entities.Sala;

/**
 *
 * @author Jesus Alan
 */
public class CineAPP extends javax.swing.JFrame {

    /**
     * Creates new form CineAPP
     */
    public CineAPP() {
        initComponents();
        desplegarDatos();
        desplegarDatosSala();
        desplegarDatosFuncion();
        tblPelicula.addMouseListener(new java.awt.event.MouseAdapter() {
    @Override
    //Al dar click a la una fila en la pelicula funcion se agregan el texto a los Fields
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        int filaSeleccionada = tblPelicula.getSelectedRow();

        if (filaSeleccionada >= 0) {
            // Obtener los datos de la fila seleccionada
            String name = tblPelicula.getValueAt(filaSeleccionada, 1).toString();
            String category = tblPelicula.getValueAt(filaSeleccionada, 2).toString();
            String duration = tblPelicula.getValueAt(filaSeleccionada, 3).toString();

            // Llenar los campos de texto con los datos de la película seleccionada
            txtName.setText(name);
            txtCategory.setText(category);
            txtDuration.setText(duration);       
        }
    }
});
        tblSala.addMouseListener(new java.awt.event.MouseAdapter() {
    @Override
    //Al dar click a la una fila en la sala funcion se agregan el texto a los Fields
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        int filaSeleccionada = tblSala.getSelectedRow();

        if (filaSeleccionada >= 0) {
            // Obtener los datos de la fila seleccionada
            int numberSala = (int) tblSala.getValueAt(filaSeleccionada, 1);
            int capacity = (int) tblSala.getValueAt(filaSeleccionada, 2);
            String stateSala = tblSala.getValueAt(filaSeleccionada, 3).toString();

            // Llenar los campos de texto con los datos de la sala seleccionada
            txtNumber.setText(String.valueOf(numberSala));
            txtCapacity.setText(String.valueOf(capacity));
            cbxStateSala.setSelectedItem(stateSala);
        }
    }
});
        
        tblFuncion.addMouseListener(new java.awt.event.MouseAdapter() {
    @Override
    //Al dar click a la una fila en la tabla funcion se agregan el texto a los Fields
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        int filaSeleccionada = tblFuncion.getSelectedRow();

        if (filaSeleccionada >= 0) {
            // Obtener los datos de la fila seleccionada
            int idPelicula = (int) tblFuncion.getValueAt(filaSeleccionada, 1);
            int idSala = (int) tblFuncion.getValueAt(filaSeleccionada, 2);
            String stateFuncion = tblFuncion.getValueAt(filaSeleccionada, 3).toString();
            String fechaString = tblFuncion.getValueAt(filaSeleccionada, 4).toString();
            String horaString = tblFuncion.getValueAt(filaSeleccionada, 5).toString();

            // Parsear fecha y hora a los tipos adecuados
            Date dateFuncion = Date.valueOf(fechaString); // Convertir String a java.sql.Date
            Time startFuncion = Time.valueOf(horaString); // Convertir String a java.sql.Time

            // Llenar los campos de texto con los datos de la función seleccionada
            txtIdPelicula.setText(String.valueOf(idPelicula));
            txtIdSala.setText(String.valueOf(idSala));
            txtStateFuncion.setText(stateFuncion);
            txtDateFuncion.setText(dateFuncion.toString());
            txtStartFuncion.setText(startFuncion.toString());
        }
    }
});
             
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPelicula = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        txtCategory = new javax.swing.JTextField();
        txtDuration = new javax.swing.JTextField();
        btnDesplegar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSala = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAgregarSala = new javax.swing.JButton();
        btnEliminarSala = new javax.swing.JButton();
        btnActualizarSala = new javax.swing.JButton();
        btnDesplegarSala = new javax.swing.JButton();
        btnborrarCamposSala = new javax.swing.JButton();
        txtNumber = new javax.swing.JTextField();
        txtCapacity = new javax.swing.JTextField();
        cbxStateSala = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblFuncion = new javax.swing.JTable();
        btnAgregarFuncion = new javax.swing.JButton();
        btnEliminarFuncion = new javax.swing.JButton();
        btnActualizarFuncion = new javax.swing.JButton();
        btnDesplegarFuncion = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtIdPelicula = new javax.swing.JTextField();
        txtIdSala = new javax.swing.JTextField();
        txtStateFuncion = new javax.swing.JTextField();
        txtDateFuncion = new javax.swing.JTextField();
        txtStartFuncion = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        txtFiltro = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblPelicula.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Category", "Duration"
            }
        ));
        jScrollPane1.setViewportView(tblPelicula);

        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnDesplegar.setText("DESPLEGAR");
        btnDesplegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesplegarActionPerformed(evt);
            }
        });

        btnBorrar.setText("BORRAR CAMPOS");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        tblSala.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Number", "Persons Capacity", "State"
            }
        ));
        jScrollPane2.setViewportView(tblSala);

        jLabel1.setText("Peliculas");

        jLabel2.setText("Sala");

        btnAgregarSala.setText("AGREGAR S");
        btnAgregarSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarSalaActionPerformed(evt);
            }
        });

        btnEliminarSala.setText("ELIMAR S");
        btnEliminarSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarSalaActionPerformed(evt);
            }
        });

        btnActualizarSala.setText("ACTUALIZAR S");
        btnActualizarSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarSalaActionPerformed(evt);
            }
        });

        btnDesplegarSala.setText("DESPLEGAR S");
        btnDesplegarSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesplegarSalaActionPerformed(evt);
            }
        });

        btnborrarCamposSala.setText("BORRAR CAMPOS");

        txtNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumberActionPerformed(evt);
            }
        });

        cbxStateSala.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Disponible", "No disponible" }));

        tblFuncion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Funcion", "ID Pelicula", "ID Sala", "State Funcion", "Date Funcion", "Starts Funcion"
            }
        ));
        jScrollPane3.setViewportView(tblFuncion);

        btnAgregarFuncion.setText("AGREGAR F");
        btnAgregarFuncion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarFuncionActionPerformed(evt);
            }
        });

        btnEliminarFuncion.setText("ELIMINAR F");
        btnEliminarFuncion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarFuncionActionPerformed(evt);
            }
        });

        btnActualizarFuncion.setText("ACTUALIZAR F");
        btnActualizarFuncion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarFuncionActionPerformed(evt);
            }
        });

        btnDesplegarFuncion.setText("DESPLEGAR F");
        btnDesplegarFuncion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesplegarFuncionActionPerformed(evt);
            }
        });

        jLabel3.setText("Name");

        jLabel4.setText("Category");

        jLabel5.setText("Duration");

        jLabel6.setText("Number");

        jLabel7.setText("Capacity");

        jLabel8.setText("State");

        jLabel9.setText("ID Pelicula");

        jLabel10.setText("ID Sala");

        jLabel11.setText("State Funcion");

        jLabel12.setText("Date Funcion");

        jLabel13.setText("Starts Funcion");

        jLabel14.setText("(yyyy-MM-dd)");

        jLabel15.setText("(HH:mm:ss)");

        jLabel16.setText("Funcion");

        btnBuscar.setText("BUSCAR PELICULA");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(189, 189, 189)
                        .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbxStateSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel3)
                        .addGap(70, 70, 70)
                        .addComponent(jLabel4)
                        .addGap(61, 61, 61)
                        .addComponent(jLabel5)
                        .addGap(221, 221, 221)
                        .addComponent(jLabel6)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel7)
                        .addGap(68, 68, 68)
                        .addComponent(jLabel8)))
                .addGap(163, 163, 163)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtIdPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(txtIdSala, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel10)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtStateFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(txtDateFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel13)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtStartFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel15)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jLabel1)
                        .addGap(472, 472, 472)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(btnBuscar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(426, 426, 426))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregar)
                            .addComponent(btnEliminar)
                            .addComponent(btnActualizar)
                            .addComponent(btnDesplegar))
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregarSala)
                            .addComponent(btnActualizarSala)
                            .addComponent(btnEliminarSala)
                            .addComponent(btnDesplegarSala))
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregarFuncion)
                            .addComponent(btnEliminarFuncion)
                            .addComponent(btnActualizarFuncion)
                            .addComponent(btnDesplegarFuncion)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(btnBorrar)
                        .addGap(337, 337, 337)
                        .addComponent(btnborrarCamposSala)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(btnAgregarSala)
                        .addGap(37, 37, 37)
                        .addComponent(btnEliminarSala)
                        .addGap(35, 35, 35)
                        .addComponent(btnActualizarSala)
                        .addGap(31, 31, 31)
                        .addComponent(btnDesplegarSala))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(btnAgregar)
                                .addGap(35, 35, 35)
                                .addComponent(btnEliminar)
                                .addGap(35, 35, 35)
                                .addComponent(btnActualizar)
                                .addGap(35, 35, 35)
                                .addComponent(btnDesplegar)
                                .addGap(213, 213, 213))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnBuscar))
                                        .addGap(27, 27, 27)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel1)
                                                    .addComponent(jLabel2))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(54, 54, 54)
                                                .addComponent(btnAgregarFuncion)
                                                .addGap(38, 38, 38)
                                                .addComponent(btnEliminarFuncion)
                                                .addGap(36, 36, 36)
                                                .addComponent(btnActualizarFuncion)
                                                .addGap(34, 34, 34)
                                                .addComponent(btnDesplegarFuncion)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel11)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel13)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxStateSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStateFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDateFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStartFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(btnBorrar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(btnborrarCamposSala))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15))))))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        
        String name = txtName.getText();
        String category = txtCategory.getText();
        String duration = txtDuration.getText();
        
        //Creamos una nueva pelicula
        Pelicula nuevaPelicula = new Pelicula();
        nuevaPelicula.setName(name);
        nuevaPelicula.setCategory(category);
        nuevaPelicula.setDuration(duration);
        
        //Llama al metodo para agregar una pelicula
        
    if (Pelicula.agregarPelicula(nuevaPelicula)) { 
        System.out.println("Pelicula agregada correctamente");
        limpiarCampos();        
        desplegarDatos();       
    }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnDesplegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesplegarActionPerformed
        // TODO add your handling code here:
                desplegarDatos();
    }
    
    //Despliega todas las peliculas  
    private void desplegarDatos() {
        System.out.println("Desplegando datos...");
    DefaultTableModel tableModel = (DefaultTableModel) tblPelicula.getModel();
        tableModel.setRowCount(0);
        
         List<Pelicula> peliculas = Pelicula.getAll("");
         
         for (Pelicula pelicula : peliculas) {
        Object[] rowData = {
                pelicula.getIdPelicula(),
                pelicula.getName(),
                pelicula.getCategory(),
                pelicula.getDuration()
        };
        tableModel.addRow(rowData);
    }    
    }//GEN-LAST:event_btnDesplegarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        
    int filaSeleccionada = tblPelicula.getSelectedRow();
 
    if (filaSeleccionada == -1) {       
    }

    // Obtener el ID de de la pelicula
    int idPelicula = (int) tblPelicula.getValueAt(filaSeleccionada, 0);

    // Llamar al método para eliminar pelicula
    if (Pelicula.eliminarPelicula(idPelicula)) {
        System.out.println("Pelicula elimanda correctamente");
        limpiarCampos();
        desplegarDatos();   
    }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
    int filaSeleccionada = tblPelicula.getSelectedRow();

    // Obtener el ID de la pelicula seleccionada
    int idPelicula = (int) tblPelicula.getValueAt(filaSeleccionada, 0);

    // Obtener los nuevos datos desde los campos de texto
    String newName = txtName.getText();
    String newCategory = txtCategory.getText();
    String newDuration = txtDuration.getText();

    Pelicula peliculaActualizada = new Pelicula();
    peliculaActualizada.setIdPelicula(idPelicula);
    peliculaActualizada.setName(newName);
    peliculaActualizada.setCategory(newCategory);
    peliculaActualizada.setDuration(newDuration);

    // Llamar al método para actualizar la pelicula
    if (Pelicula.actualizarPelicula(peliculaActualizada)){
        System.out.println("Pelicula actualizada correctamente");
        limpiarCampos();
        desplegarDatos();
    }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
    }
        private void limpiarCampos() {
     System.out.println("Limpiando campos...");
        // Limpiar los campos de entrada 
        txtName.setText("");
        txtCategory.setText("");
        txtDuration.setText("");
        txtNumber.setText("");
        txtCapacity.setText("");
        txtIdPelicula.setText("");
        txtIdSala.setText("");
        txtStateFuncion.setText("");
        txtDateFuncion.setText("");
        txtStartFuncion.setText("");
        
     System.out.println("Limpiando campos - Fin");
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnAgregarSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarSalaActionPerformed
        // TODO add your handling code here:
        
         
         // Convertir el número de sala a un entero
         int numberSala = Integer.parseInt(txtNumber.getText());           
         // Convertir a entero la capacidad
         int capacity = Integer.parseInt(txtCapacity.getText()); 
         String stateSala = cbxStateSala.getSelectedItem().toString();

           // Crear una nueva sala
           Sala nuevaSala = new Sala();
           nuevaSala.setNumberSala(numberSala);
           nuevaSala.setCapacity(capacity);
           nuevaSala.setStateSala(stateSala);
        
        //Llama al metodo para agregar una sala      
     if (Sala.agregarSala(nuevaSala)) {  
        System.out.println("Saala agregada correctamente");
        limpiarCampos();        
        desplegarDatosSala();       
    }     
    }//GEN-LAST:event_btnAgregarSalaActionPerformed

    private void btnEliminarSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarSalaActionPerformed
        // TODO add your handling code here:
     int filaSeleccionada = tblSala.getSelectedRow();
 
    if (filaSeleccionada == -1) {       
    }
    // Obtener el ID de de la pelicula
    int idSala = (int) tblSala.getValueAt(filaSeleccionada, 0);

    // Llamar al método para eliminar pelicula
    if (Sala.eliminarSala(idSala)) {
        System.out.println("Sala eliminada correctamente");
        limpiarCampos();
        desplegarDatosSala();   
    }
     
    }//GEN-LAST:event_btnEliminarSalaActionPerformed

    private void btnActualizarSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarSalaActionPerformed
        // TODO add your handling code here:
    int filaSeleccionada = tblSala.getSelectedRow();

    // Obtener el ID de la sala seleccionada
    int idSala = (int) tblSala.getValueAt(filaSeleccionada, 0);

    // Obtener los nuevos datos desde los campos de texto
    // Convertir el número de sala a un entero
     int newnumberSala = Integer.parseInt(txtNumber.getText());           
     int newcapacity = Integer.parseInt(txtCapacity.getText()); 
     String newstateSala = cbxStateSala.getSelectedItem().toString();

    Sala salaActualizada = new Sala();
    salaActualizada.setIdSala(idSala);
    salaActualizada.setNumberSala(newnumberSala);
    salaActualizada.setCapacity(newcapacity);
    salaActualizada.setStateSala(newstateSala);

    // Llamar al método para actualizar la pelicula
    if (Sala.actualizarSala(salaActualizada)){   
        System.out.println("Sala actualizada correctamente");
        limpiarCampos();
        desplegarDatosSala();
    }    
    }//GEN-LAST:event_btnActualizarSalaActionPerformed

    private void btnDesplegarSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesplegarSalaActionPerformed
        // TODO add your handling code here:
        desplegarDatosSala();
    }
    private void desplegarDatosSala() {
        System.out.println("Desplegando datos...");
    DefaultTableModel tableModel = (DefaultTableModel) tblSala.getModel();
        tableModel.setRowCount(0);
        
         List<Sala> salas = Sala.getAll("");
         
         for (Sala sala : salas) {
        Object[] rowData = {
                sala.getIdSala(),
                sala.getNumberSala(),
                sala.getCapacity(),
                sala.getStateSala()
        };
        tableModel.addRow(rowData);
    }    
    }//GEN-LAST:event_btnDesplegarSalaActionPerformed

    private void txtNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumberActionPerformed

    private void btnAgregarFuncionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarFuncionActionPerformed
        // TODO add your handling code here:
        
    int idPelicula = Integer.parseInt(txtIdPelicula.getText());
    int idSala = Integer.parseInt(txtIdSala.getText()); 
    String stateFuncion = txtStateFuncion.getText();
    Date dateFuncion = obtenerFechaTxt(txtDateFuncion.getText()); 
    Time startFuncion = obtenerTiempoTxt(txtStartFuncion.getText());

    // Crear instancia de Funcion
    Funcion nuevaFuncion = new Funcion();
    nuevaFuncion.setPelicula(new Pelicula(idPelicula));
    nuevaFuncion.setSala(new Sala(idSala));  
    nuevaFuncion.setStateFuncion(stateFuncion);
    nuevaFuncion.setDateFuncion((java.sql.Date) dateFuncion);
    nuevaFuncion.setStartFuncion(startFuncion);

    // Agregar la función a la base de datos
    if (Funcion.agregarFuncion(nuevaFuncion)) {
        System.out.println("Función agregada correctamente");
         limpiarCampos();
         desplegarDatosFuncion();
        }
    }
    private Date obtenerFechaTxt(String textoFecha) {
    try {
        // Definir el formato de fecha esperado
        SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
        
        // Parsear la cadena de texto a un objeto Date
        java.util.Date parsedDate = formatoFecha.parse(textoFecha);
        
        // Convertir Date
        return new Date(parsedDate.getTime());
    } catch (ParseException ex) {
        
        return null;
    }
}

    private Time obtenerTiempoTxt(String textoTiempo) {
    try {
        // Definir el formato de tiempo esperado
        SimpleDateFormat formatoTiempo = new SimpleDateFormat("HH:mm:ss");
        
        // Parsear la cadena de texto a un objeto Date
        java.util.Date parsedTime = formatoTiempo.parse(textoTiempo);
        
        // Convertir Time
        return new Time(parsedTime.getTime());
    } catch (ParseException ex) {
        
        return null;
    }
    }//GEN-LAST:event_btnAgregarFuncionActionPerformed

    private void btnDesplegarFuncionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesplegarFuncionActionPerformed
        // TODO add your handling code here:
        desplegarDatosFuncion();
    }
    //Desplega los datos de funcion
        private void desplegarDatosFuncion() {
        
    DefaultTableModel tableModel = (DefaultTableModel) tblFuncion.getModel();
    tableModel.setRowCount(0);

    List<Funcion> funciones = Funcion.getAll("");

    for (Funcion funcion : funciones) {
        Object[] rowData = {
                funcion.getIdFuncion(),
                funcion.getPelicula().getIdPelicula(),
                funcion.getSala().getIdSala(),
                funcion.getStateFuncion(),
                funcion.getDateFuncion(),
                funcion.getStartFuncion()
        };
        tableModel.addRow(rowData);
    }    
    }//GEN-LAST:event_btnDesplegarFuncionActionPerformed

    private void btnEliminarFuncionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarFuncionActionPerformed
        // TODO add your handling code here:
    int filaSeleccionada = tblFuncion.getSelectedRow();
 
    if (filaSeleccionada == -1) {       
    }

    // Obtener el ID de de la funcion
    int idFuncion = (int) tblFuncion.getValueAt(filaSeleccionada, 0);

    // Llamar al método para eliminar funcion
    if (Funcion.eliminarFuncion(idFuncion)) {
        System.out.println("Función eliminada correctamente");
        limpiarCampos();
        desplegarDatosFuncion();   
    }
    }//GEN-LAST:event_btnEliminarFuncionActionPerformed

    private void btnActualizarFuncionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarFuncionActionPerformed
        // TODO add your handling code here:
    // Obtener el ID de la función seleccionada
    int filaSeleccionada = tblFuncion.getSelectedRow();    
    int idFuncion = (int) tblFuncion.getValueAt(filaSeleccionada, 0);
    

    // Obtener los nuevos datos desde los campos de texto
    int idSala = Integer.parseInt(txtIdSala.getText());
    int idPelicula = Integer.parseInt(txtIdPelicula.getText());
    String stateFuncion = txtStateFuncion.getText();
    
    // Obtener la fecha y hora desde los campos de texto y convertirlas a los tipos adecuados
    String fechaString = txtDateFuncion.getText();
    String horaString = txtStartFuncion.getText();
    Date dateFuncion = Date.valueOf(fechaString);
    Time startFuncion = Time.valueOf(horaString);

    // Crear una nueva instancia de Funcion con los valores actualizados
    Funcion funcionActualizada = new Funcion();
    funcionActualizada.setIdFuncion(idFuncion);
    funcionActualizada.setSala(new Sala(idSala));
    funcionActualizada.setPelicula(new Pelicula(idPelicula));
    funcionActualizada.setStateFuncion(stateFuncion);
    funcionActualizada.setDateFuncion(dateFuncion);
    funcionActualizada.setStartFuncion(startFuncion);

    // Llamar al método de actualización
    if (Funcion.actualizarFuncion(funcionActualizada)) {
        System.out.println("Función actualizada correctamente");
        limpiarCampos();
        desplegarDatosFuncion();
    }
    }//GEN-LAST:event_btnActualizarFuncionActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
       String filtro = txtFiltro.getText();
        
        DefaultTableModel tableModel = (DefaultTableModel) tblPelicula.getModel();
        tableModel.setRowCount(0);
        
        List<Pelicula> peliculas = Pelicula.getAll(filtro);
         peliculas.sort((o1, o2) -> o1.getName().compareToIgnoreCase(filtro) - o2.getName().compareToIgnoreCase(filtro));
        
        for (Pelicula pelicula : peliculas) {
        Object[] rowData = {
                pelicula.getIdPelicula(),
                pelicula.getName(),
                pelicula.getCategory(),
                pelicula.getDuration()
        };
        tableModel.addRow(rowData);
    }               
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CineAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CineAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CineAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CineAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CineAPP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnActualizarFuncion;
    private javax.swing.JButton btnActualizarSala;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregarFuncion;
    private javax.swing.JButton btnAgregarSala;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDesplegar;
    private javax.swing.JButton btnDesplegarFuncion;
    private javax.swing.JButton btnDesplegarSala;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarFuncion;
    private javax.swing.JButton btnEliminarSala;
    private javax.swing.JButton btnborrarCamposSala;
    private javax.swing.JComboBox<String> cbxStateSala;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblFuncion;
    private javax.swing.JTable tblPelicula;
    private javax.swing.JTable tblSala;
    private javax.swing.JTextField txtCapacity;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtDateFuncion;
    private javax.swing.JTextField txtDuration;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtIdPelicula;
    private javax.swing.JTextField txtIdSala;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNumber;
    private javax.swing.JTextField txtStartFuncion;
    private javax.swing.JTextField txtStateFuncion;
    // End of variables declaration//GEN-END:variables
}
